<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Text Editor - Resbot AI</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .navbar {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            margin-bottom: 1.5rem;
        }
        .text-item {
            border: 1px solid #e9ecef;
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
        }
        .text-item:hover {
            border-color: #667eea;
            box-shadow: 0 2px 10px rgba(102, 126, 234, 0.1);
        }
        .text-preview {
            background-color: #f8f9fa;
            border-radius: 8px;
            padding: 0.8rem;
            font-family: monospace;
            font-size: 0.9rem;
            max-height: 200px;
            overflow-y: auto;
        }
        .category-badge {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 0.3rem 0.8rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 500;
        }
        .search-highlight {
            background-color: yellow;
            padding: 0.1rem 0.3rem;
            border-radius: 3px;
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="/dashboard">
                <i class="fas fa-robot me-2"></i>Resbot AI Admin
            </a>
            <div class="navbar-nav me-auto">
                <a class="nav-link" href="/dashboard">
                    <i class="fas fa-tachometer-alt me-1"></i>Dashboard
                </a>
                <a class="nav-link active" href="/texts">
                    <i class="fas fa-edit me-1"></i>Text Editor
                </a>
            </div>
            <div class="navbar-nav">
                <a class="nav-link" href="/logout">
                    <i class="fas fa-sign-out-alt me-1"></i>Logout
                </a>
            </div>
        </div>
    </nav>

    <div class="container-fluid mt-4">
        <!-- Toast Notifications -->
        <% if (toast) { %>
            <div class="toast-container position-fixed top-0 end-0 p-3">
                <div class="toast show" role="alert">
                    <div class="toast-header">
                        <strong class="me-auto">
                            <i class="fas fa-<%= toast.type === 'success' ? 'check-circle text-success' : 'exclamation-triangle text-warning' %> me-2"></i>
                            Notification
                        </strong>
                        <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
                    </div>
                    <div class="toast-body">
                        <%= toast.msg %>
                    </div>
                </div>
            </div>
        <% } %>

        <!-- Header -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h4 class="card-title mb-1">
                                    <i class="fas fa-edit text-primary me-2"></i>
                                    Dynamic Text Editor
                                </h4>
                                <p class="card-text text-muted mb-0">Edit semua teks bot tanpa restart - real-time!</p>
                            </div>
                            <div>
                                <button class="btn btn-outline-warning me-2" onclick="resetToDefaults()">
                                    <i class="fas fa-undo me-1"></i>Reset to Default
                                </button>
                                <button class="btn btn-success" onclick="hotReload()">
                                    <i class="fas fa-sync me-1"></i>Hot Reload
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Stats & Search -->
        <div class="row">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-search text-info me-2"></i>
                            Search & Edit Texts
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <input type="text" class="form-control" id="searchInput" placeholder="Cari teks... (contoh: 'garansi', 'harga', 'error')">
                            </div>
                            <div class="col-md-3">
                                <select class="form-select" id="categoryFilter">
                                    <option value="">Semua Kategori</option>
                                    <% for (const [key, value] of Object.entries(allTexts.categories || {})) { %>
                                        <option value="<%= value %>"><%= key.replace(/_/g, ' ') %></option>
                                    <% } %>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <button class="btn btn-primary w-100" onclick="searchTexts()">
                                    <i class="fas fa-search me-1"></i>Search
                                </button>
                            </div>
                        </div>
                        
                        <div id="searchResults">
                            <!-- Search results will appear here -->
                        </div>
                        
                        <div id="textsList">
                            <% if (allTexts.texts && Object.keys(allTexts.texts).length > 0) { %>
                                <% for (const [category, categoryTexts] of Object.entries(allTexts.texts)) { %>
                                    <div class="mb-4">
                                        <h6 class="mb-3">
                                            <span class="category-badge"><%= category.replace(/_/g, ' ').toUpperCase() %></span>
                                            <small class="text-muted ms-2">(<%= Object.keys(categoryTexts).length %> texts)</small>
                                        </h6>
                                        
                                        <% for (const [key, text] of Object.entries(categoryTexts)) { %>
                                            <div class="text-item" data-category="<%= category %>" data-key="<%= key %>">
                                                <div class="d-flex justify-content-between align-items-start mb-2">
                                                    <div>
                                                        <strong><%= key.replace(/_/g, ' ') %></strong>
                                                        <br><small class="text-muted"><%= category %>.<%= key %></small>
                                                    </div>
                                                    <button class="btn btn-sm btn-outline-primary" onclick="editText('<%= category %>', '<%= key %>')">
                                                        <i class="fas fa-edit me-1"></i>Edit
                                                    </button>
                                                </div>
                                                
                                                <div class="text-preview">
                                                    <% if (Array.isArray(text)) { %>
                                                        <strong>Array (Random Selection):</strong><br>
                                                        <% text.forEach((item, index) => { %>
                                                            <%= index + 1 %>. <%= item.substring(0, 100) %><%= item.length > 100 ? '...' : '' %><br>
                                                        <% }) %>
                                                    <% } else { %>
                                                        <%= text.substring(0, 200) %><%= text.length > 200 ? '...' : '' %>
                                                    <% } %>
                                                </div>
                                            </div>
                                        <% } %>
                                    </div>
                                <% } %>
                            <% } else { %>
                                <div class="alert alert-info">
                                    <i class="fas fa-info-circle me-2"></i>
                                    Belum ada custom texts. Menggunakan default texts.
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-lg-4">
                <!-- Stats -->
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-chart-pie text-success me-2"></i>
                            Text Statistics
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-12 mb-3">
                                <div class="h3 text-primary"><%= usageStats.totalTexts || 0 %></div>
                                <small class="text-muted">Total Texts</small>
                            </div>
                        </div>
                        
                        <% if (usageStats.categoryCounts && Object.keys(usageStats.categoryCounts).length > 0) { %>
                            <h6 class="mb-2">Per Kategori:</h6>
                            <% for (const [category, count] of Object.entries(usageStats.categoryCounts)) { %>
                                <div class="d-flex justify-content-between mb-1">
                                    <small><%= category.replace(/_/g, ' ') %></small>
                                    <span class="badge bg-secondary"><%= count %></span>
                                </div>
                            <% } %>
                        <% } %>
                        
                        <hr>
                        <small class="text-muted">
                            <i class="fas fa-clock me-1"></i>
                            Last Updated: <%= allTexts.lastUpdated ? new Date(allTexts.lastUpdated).toLocaleString('id-ID') : 'Never' %>
                        </small>
                    </div>
                </div>
                
                <!-- Quick Actions -->
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-bolt text-warning me-2"></i>
                            Quick Actions
                        </h5>
                    </div>
                    <div class="card-body">
                        <button class="btn btn-outline-success w-100 mb-2" onclick="showAddTextModal()">
                            <i class="fas fa-plus me-1"></i>Add New Text
                        </button>
                        <button class="btn btn-outline-info w-100 mb-2" onclick="exportTexts()">
                            <i class="fas fa-download me-1"></i>Export Texts
                        </button>
                        <button class="btn btn-outline-secondary w-100" onclick="showUsageGuide()">
                            <i class="fas fa-question-circle me-1"></i>Usage Guide
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Text Modal -->
    <div class="modal fade" id="editTextModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-edit me-2"></i>Edit Text
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form action="/texts/update" method="POST">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Category</label>
                            <input type="text" name="category" id="editCategory" class="form-control" readonly>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Key</label>
                            <input type="text" name="key" id="editKey" class="form-control" readonly>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Text Content</label>
                            <textarea name="text" id="editText" class="form-control" rows="8" required></textarea>
                            <div class="form-text">
                                💡 Tips: Gunakan {variable} untuk dynamic content. Contoh: {name}, {time}, {product}
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Preview</label>
                            <div id="textPreview" class="text-preview"></div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-1"></i>Update Text
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Add Text Modal -->
    <div class="modal fade" id="addTextModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-plus me-2"></i>Add New Text
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form action="/texts/add" method="POST">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Category</label>
                            <select name="category" class="form-select" required>
                                <option value="">Pilih Kategori</option>
                                <% for (const [key, value] of Object.entries(allTexts.categories || {})) { %>
                                    <option value="<%= value %>"><%= key.replace(/_/g, ' ') %></option>
                                <% } %>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Key</label>
                            <input type="text" name="key" class="form-control" placeholder="text_key" required>
                            <div class="form-text">Gunakan format: lowercase_with_underscores</div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Text Content</label>
                            <textarea name="text" class="form-control" rows="6" required></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-success">
                            <i class="fas fa-plus me-1"></i>Add Text
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Edit text function
        function editText(category, key) {
            // Find the text content
            const textItem = document.querySelector(`[data-category="${category}"][data-key="${key}"]`);
            const textContent = getOriginalText(category, key);
            
            document.getElementById('editCategory').value = category;
            document.getElementById('editKey').value = key;
            document.getElementById('editText').value = textContent;
            
            // Update preview
            updatePreview();
            
            // Show modal
            const modal = new bootstrap.Modal(document.getElementById('editTextModal'));
            modal.show();
        }

        function getOriginalText(category, key) {
            // Get original text from data
            const allTexts = <%- JSON.stringify(allTexts.texts || {}) %>;
            const text = allTexts[category]?.[key];
            
            if (Array.isArray(text)) {
                return text.join('\n---\n'); // Join array items with separator
            }
            
            return text || '';
        }

        function updatePreview() {
            const text = document.getElementById('editText').value;
            const preview = document.getElementById('textPreview');
            
            // Simple preview with variable highlighting
            let previewText = text.replace(/{([^}]+)}/g, '<span class="text-primary"><strong>{$1}</strong></span>');
            preview.innerHTML = previewText.replace(/\n/g, '<br>');
        }

        // Search texts
        function searchTexts() {
            const keyword = document.getElementById('searchInput').value;
            const category = document.getElementById('categoryFilter').value;
            
            if (!keyword.trim()) {
                document.getElementById('searchResults').innerHTML = '';
                document.getElementById('textsList').style.display = 'block';
                return;
            }
            
            fetch(`/texts/search?q=${encodeURIComponent(keyword)}`)
                .then(response => response.json())
                .then(results => {
                    displaySearchResults(results, keyword);
                })
                .catch(error => {
                    console.error('Search error:', error);
                });
        }

        function displaySearchResults(results, keyword) {
            const container = document.getElementById('searchResults');
            const textsList = document.getElementById('textsList');
            
            if (results.length === 0) {
                container.innerHTML = `
                    <div class="alert alert-info">
                        <i class="fas fa-search me-2"></i>
                        Tidak ada hasil untuk "${keyword}"
                    </div>
                `;
                textsList.style.display = 'none';
                return;
            }
            
            let html = `<h6 class="mb-3">🔍 Hasil pencarian "${keyword}" (${results.length} found):</h6>`;
            
            results.forEach(result => {
                const highlightedText = result.text.replace(
                    new RegExp(keyword, 'gi'), 
                    `<span class="search-highlight">$&</span>`
                );
                
                html += `
                    <div class="text-item">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <div>
                                <strong>${result.key.replace(/_/g, ' ')}</strong>
                                <br><small class="text-muted">${result.category}.${result.key}</small>
                            </div>
                            <button class="btn btn-sm btn-outline-primary" onclick="editText('${result.category}', '${result.key}')">
                                <i class="fas fa-edit me-1"></i>Edit
                            </button>
                        </div>
                        <div class="text-preview">
                            ${highlightedText}
                        </div>
                    </div>
                `;
            });
            
            container.innerHTML = html;
            textsList.style.display = 'none';
        }

        function clearSearch() {
            document.getElementById('searchInput').value = '';
            document.getElementById('categoryFilter').value = '';
            document.getElementById('searchResults').innerHTML = '';
            document.getElementById('textsList').style.display = 'block';
        }

        function showAddTextModal() {
            const modal = new bootstrap.Modal(document.getElementById('addTextModal'));
            modal.show();
        }

        function resetToDefaults() {
            if (confirm('Yakin mau reset semua text ke default? Perubahan akan hilang!')) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '/texts/reset';
                document.body.appendChild(form);
                form.submit();
            }
        }

        function hotReload() {
            const form = document.createElement('form');
            form.method = 'POST';
            form.action = '/texts/reload';
            document.body.appendChild(form);
            form.submit();
        }

        function exportTexts() {
            const allTexts = <%- JSON.stringify(allTexts.texts || {}) %>;
            const dataStr = JSON.stringify(allTexts, null, 2);
            const dataBlob = new Blob([dataStr], {type: 'application/json'});
            const url = URL.createObjectURL(dataBlob);
            const link = document.createElement('a');
            link.href = url;
            link.download = `bot_texts_${new Date().toISOString().split('T')[0]}.json`;
            link.click();
        }

        function showUsageGuide() {
            alert(`📚 USAGE GUIDE:

🎯 Dynamic Variables:
• {name} - Nama user/admin
• {time} - Waktu saat ini  
• {date} - Tanggal
• {product} - Nama produk
• {type} - Jenis (replace/reset)

💡 Array Texts:
Pisahkan dengan enter untuk multiple variations

🔥 Hot Reload:
Perubahan langsung aktif tanpa restart bot!

⚠️ Validation:
• Max 1000 karakter
• Tidak boleh mention kompetitor
• Harus professional tone`);
        }

        // Auto-update preview while typing
        document.getElementById('editText')?.addEventListener('input', updatePreview);

        // Auto dismiss toast
        setTimeout(() => {
            const toasts = document.querySelectorAll('.toast');
            toasts.forEach(toast => {
                const bsToast = new bootstrap.Toast(toast);
                bsToast.hide();
            });
        }, 5000);

        // Search on enter
        document.getElementById('searchInput')?.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                searchTexts();
            }
        });
    </script>
</body>
</html>